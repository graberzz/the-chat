// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<UserProfile /> matches logged in snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Unknown
    login={[Function]}
    logout={[Function]}
    user={null}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <styled.img
          alt="Google"
          src="/google.png"
/>,
        "Login",
      ],
      "onClick": [Function],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "alt": "Google",
          "src": "/google.png",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "Login",
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <styled.img
            alt="Google"
            src="/google.png"
/>,
          "Login",
        ],
        "onClick": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "alt": "Google",
            "src": "/google.png",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "Login",
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<UserProfile /> matches logged out snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Unknown
    login={[Function]}
    logout={[Function]}
    user={
        Object {
            "avatar": "hhtps",
            "username": "user",
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <styled.img
          alt="user"
          src="hhtps"
/>,
        "Logout",
      ],
      "onClick": [Function],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "alt": "user",
          "src": "hhtps",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "Logout",
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <styled.img
            alt="user"
            src="hhtps"
/>,
          "Logout",
        ],
        "onClick": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "alt": "user",
            "src": "hhtps",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "Logout",
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
